// <auto-generated />
using System;
using Issue12PostgreSql.DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Issue12PostgreSql.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200330065710_V2020_03_30_1126")]
    partial class V2020_03_30_1126
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Issue12PostgreSql.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("AddDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<byte[]>("ByteArrayValue")
                        .HasColumnType("bytea");

                    b.Property<byte>("ByteValue")
                        .HasColumnType("smallint");

                    b.Property<char>("CharValue")
                        .HasColumnType("character(1)");

                    b.Property<DateTimeOffset>("DateTimeOffsetValue")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("DecimalValue")
                        .HasColumnType("numeric");

                    b.Property<double>("DoubleValue")
                        .HasColumnType("double precision");

                    b.Property<float>("FloatValue")
                        .HasColumnType("real");

                    b.Property<Guid>("GuidValue")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<long>("Points")
                        .HasColumnType("bigint");

                    b.Property<short>("ShortValue")
                        .HasColumnType("smallint");

                    b.Property<TimeSpan>("TimeSpanValue")
                        .HasColumnType("interval");

                    b.Property<long>("UintValue")
                        .HasColumnType("bigint");

                    b.Property<decimal>("UlongValue")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("UshortValue")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.ToTable("People");
                });
#pragma warning restore 612, 618
        }
    }
}
